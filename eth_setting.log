docker pull pjt3591oo/ethereum-geth:1.90
docker images
docker run -it --name ethereum.geth -p 8545:8545 -p 30303:30303 -d pjt3591oo/ethereum-geth:1.90
docker start ethereum.geth
docker exec -it ethereum.geth /bin/bash


## 1) bootnode 생성
root@5f15d9a4d8a1:/# mkdir bootnode
root@5f15d9a4d8a1:/# cd bootnode/
root@5f15d9a4d8a1:/bootnode# bootnode -genkey boot.key
root@5f15d9a4d8a1:/bootnode# ls
boot.key

root@5f15d9a4d8a1:/bootnode# cat boot.key  
517cc4ad86504e26d8f7eba8f10fb6040de71c12fc636c806d2a73337320315f

## bootnode 실행
root@5f15d9a4d8a1:/bootnode# bootnode -nodekey boot.key -verbosity 9 
enode://42e1af1d37bec8378e08cd421c0094c916822aa6ae03aa1e834dd319209cf73b2d5e563d2b3f3427e78ed51d59dbc8bd6da4a230c9993f88fccbc513601eb9a9@127.0.0.1:0?discport=30301
Note: you're using cmd/bootnode, a developer tool.
We recommend using a regular node as bootstrap node for production deployments.
INFO [07-24|04:17:53.112] New local node record                    seq=1 id=a90114f66ffdd120 ip=<nil> udp=0 tcp=0

## 2) node1 생성
$ mkdir node1
$ cd node1
$ geth --datadir $PWD account new
docker cp D:\web3\genesis.json ethereum.geth:/node1/genesis.json
geth --datadir $PWD init genesis.json

## node1 geth 실행
geth --port 30311 --rpc --rpcaddr 0.0.0.0 --rpcport 8545 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console --bootnodes 'enode://42e1af1d37bec8378e08cd421c0094c916822aa6ae03aa1e834dd319209cf73b2d5e563d2b3f3427e78ed51d59dbc8bd6da4a230c9993f88fccbc513601eb9a9@127.0.0.1:30311?discport=30301' --syncmode 'full'

## 3) node2 생성
$ mkdir node2
$ cd node2
$ geth --datadir $PWD account new
docker cp D:\web3\genesis.json ethereum.geth:/node2/genesis.json
geth --datadir $PWD init genesis.json

## node2 geth 실행
geth --port 30312 --rpc --rpcaddr 0.0.0.0 --rpcport 8546 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console --bootnodes 'enode://42e1af1d37bec8378e08cd421c0094c916822aa6ae03aa1e834dd319209cf73b2d5e563d2b3f3427e78ed51d59dbc8bd6da4a230c9993f88fccbc513601eb9a9@127.0.0.1:30312?discport=30301' --syncmode 'full'

## 4) node3 생성
$ mkdir node3
$ cd node3
$ geth --datadir $PWD account new
docker cp D:\web3\genesis.json ethereum.geth:/node3/genesis.json
geth --datadir $PWD init genesis.json

## node3 geth 실행
geth --port 30313 --rpc --rpcaddr 0.0.0.0 --rpcport 8547 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console --bootnodes 'enode://42e1af1d37bec8378e08cd421c0094c916822aa6ae03aa1e834dd319209cf73b2d5e563d2b3f3427e78ed51d59dbc8bd6da4a230c9993f88fccbc513601eb9a9@127.0.0.1:30313?discport=30301' --syncmode 'full'

## 각 노드에서 peer연결 확인
net.peerCount
admin.peers







######### Ubuntu 18.04

git clone https://github.com/carsenk/explorer
apt-get remove nodejs npm  #설치되어있다면 삭제
apt-get update
apt-get upgrade

#node, npm 설치
curl -sL https://deb.nodesource.com/setup_12.x | bash -

## Run `sudo apt-get install -y nodejs` to install Node.js 12.x and npm
## You may also need development tools to build native addons:
     sudo apt-get install gcc g++ make
## To install the Yarn package manager, run:
     curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
     apt-get update && apt-get install yarn

apt-get install -y nodejs
apt-get install build-essential

apt-get install npm
npm -v #버전확인
cd explorer
npm install -g bower #bower설치
npm install

bower install
npm start
geth --rpc --rpcaddr localhost --rpcport 8545 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal console --rpccorsdomain="*" --dev

##################### web3js 외부접속
sample
geth --datadir $PWD --networkid 1234 console
geth --rpc --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal console

single node
geth --port 30311 --rpc --rpcaddr 0.0.0.0 --rpcport 8545 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console
geth --port 30312 --rpc --rpcaddr 0.0.0.0 --rpcport 8546 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console

multi node
geth --port 30311 --rpc --rpcaddr 0.0.0.0 --rpcport 8545 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console --bootnodes 'enode://42e1af1d37bec8378e08cd421c0094c916822aa6ae03aa1e834dd319209cf73b2d5e563d2b3f3427e78ed51d59dbc8bd6da4a230c9993f88fccbc513601eb9a9@127.0.0.1:30311?discport=30301' --syncmode 'full'
geth --port 30312 --rpc --rpcaddr 0.0.0.0 --rpcport 8546 --datadir $PWD --networkid 1234 --rpcapi db,eth,net,web3,admin.personal,personal --rpccorsdomain "*" console --bootnodes 'enode://42e1af1d37bec8378e08cd421c0094c916822aa6ae03aa1e834dd319209cf73b2d5e563d2b3f3427e78ed51d59dbc8bd6da4a230c9993f88fccbc513601eb9a9@127.0.0.1:30312?discport=30301' --syncmode 'full'

geth 계정잠금 해제옵션
 --unlock 0
 >> geth 구동 시 0번째 계정을 잠금 해제한다
 --password 'pass'
 >> geth 구동 시 계정의 비밀번호를 입력한다

geth 기본 마이닝 옵션
--mine --minerthreads 1

eth.blockNumber
eth.getBlock()
eth.accounts
eth.getBalance(eth.accounts[0])

personal.newAccount("1234")

eth.mining
>>false
miner.start(10)
eth.mining
>>마이닝 시작
miner.stop()

personal.unlockAccount(eth.accounts[0], "1234")
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:'10000000000'})
eth.sendTransaction({from:eth.accounts[0],data:"hello world!!"})
eth.sendTransaction({from:eth.accounts[0],data:"0x68656c6c6f20776f726c642121"})
eth.pendingTransactions
txpool.content

트랜잭션 상세확인
eth.getTransactionFromBlock("0x4c4b07ccae4a4fc45fb13bd6c191b9b8b386db474a119d231490278413ec50de") 
eth.getTransaction("0xd6260cedf627fdaf6d021106569bf7944728d224356e7353bc406043aafff0f3") 

# docker ifconfig설치
apt-get install net-tools

# web3js
npm, node 설치 후
bower install web3


docker commit -a "hypermusic" -m "geth_3nodeNbootnode" ethereum.geth hypermusic/ethereum-geth:1.00
docker run -it --name ethereum.geth.3node -p 8545:8545 -p 8546:8546 -p 8547:8547 -d hypermusic/ethereum-geth:1.00